{"ast":null,"code":"export const loadResults = data => {\n  return new Promise((resolve, reject) => {\n    const firstName = data.firstName,\n          destCity = data.destCity,\n          arriveDate = data.arriveDate,\n          numberNights = data.numberNights;\n\n    const getLocationId = async () => {\n      await fetch(\"http://localhost:4000/locationid/\".concat(destCity)).then(res => res.json()).then(parsedId => getHotelList(parsedId));\n    };\n\n    const getHotelList = async locationId => {\n      await fetch(\"http://localhost:4000/hotellist/\".concat(locationId, \"/\").concat(arriveDate, \"/\").concat(numberNights)).then(res => res.json()).then(parsedHotelList => resolve(parsedHotelList));\n    };\n\n    getLocationId(destCity);\n  });\n};","map":{"version":3,"sources":["/Users/rjshoemaker/Desktop/Stuff/code/projects/myconcierge/client/src/loadResults.js"],"names":["loadResults","data","Promise","resolve","reject","firstName","destCity","arriveDate","numberNights","getLocationId","fetch","then","res","json","parsedId","getHotelList","locationId","parsedHotelList"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAAA,UAC9BC,SAD8B,GACoBJ,IADpB,CAC9BI,SAD8B;AAAA,UACnBC,QADmB,GACoBL,IADpB,CACnBK,QADmB;AAAA,UACTC,UADS,GACoBN,IADpB,CACTM,UADS;AAAA,UACGC,YADH,GACoBP,IADpB,CACGO,YADH;;AAGtC,UAAMC,aAAa,GAAG,YAAY;AAChC,YAAMC,KAAK,4CAAqCJ,QAArC,EAAL,CACHK,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGG,QAAD,IAAcC,YAAY,CAACD,QAAD,CAF5B,CAAN;AAGD,KAJD;;AAMA,UAAMC,YAAY,GAAG,MAAOC,UAAP,IAAsB;AACzC,YAAMN,KAAK,2CAC0BM,UAD1B,cACwCT,UADxC,cACsDC,YADtD,EAAL,CAGHG,IAHG,CAGGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHX,EAIHF,IAJG,CAIGM,eAAD,IAAqBd,OAAO,CAACc,eAAD,CAJ9B,CAAN;AAKD,KAND;;AAOAR,IAAAA,aAAa,CAACH,QAAD,CAAb;AACD,GAjBM,CAAP;AAkBD,CAnBM","sourcesContent":["export const loadResults = (data) => {\n  return new Promise((resolve, reject) => {\n    const { firstName, destCity, arriveDate, numberNights } = data;\n\n    const getLocationId = async () => {\n      await fetch(`http://localhost:4000/locationid/${destCity}`)\n        .then((res) => res.json())\n        .then((parsedId) => getHotelList(parsedId));\n    };\n\n    const getHotelList = async (locationId) => {\n      await fetch(\n        `http://localhost:4000/hotellist/${locationId}/${arriveDate}/${numberNights}`\n      )\n        .then((res) => res.json())\n        .then((parsedHotelList) => resolve(parsedHotelList));\n    };\n    getLocationId(destCity);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}