{"ast":null,"code":"const axios = require('axios');\n\nconst loadResults = items => {\n  return new Promise((resolve, reject) => {\n    const firstName = items.firstName,\n          destCity = items.destCity,\n          originCity = items.originCity,\n          depDate = items.depDate,\n          returnDate = items.returnDate;\n    let originCityId;\n    let destCityId;\n    let originCityName;\n    let destCityName;\n\n    const getOriginCityId = () => {\n      axios({\n        method: 'GET',\n        url: 'https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/UK/GBP/en-GB/',\n        headers: {\n          'content-type': 'application/octet-stream',\n          'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n          'x-rapidapi-key': '2f3a0e5559mshf0b9a7a94324ff7p1bf4dajsna06e1715474c'\n        },\n        params: {\n          query: originCity\n        }\n      }).then(response => {\n        originCityId = response.data.Places[0].PlaceId;\n        originCityName = response.data.Places[0].PlaceName;\n        getDestCityId();\n      }).catch(error => {\n        console.log(error);\n        reject(error);\n      });\n    };\n\n    const getDestCityId = () => {\n      axios({\n        method: 'GET',\n        url: 'https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/UK/GBP/en-GB/',\n        headers: {\n          'content-type': 'application/octet-stream',\n          'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n          'x-rapidapi-key': '2f3a0e5559mshf0b9a7a94324ff7p1bf4dajsna06e1715474c'\n        },\n        params: {\n          query: destCity\n        }\n      }).then(response => {\n        destCityId = response.data.Places[0].PlaceId;\n        destCityName = response.data.Places[0].PlaceName;\n        searchFlights();\n      }).catch(error => {\n        console.log(error);\n        reject(error);\n      });\n    };\n\n    const searchFlights = () => {\n      const returnObj = {\n        firstName,\n        originCityId,\n        originCityName,\n        destCityId,\n        destCityName,\n        depDate,\n        returnDate\n      };\n      resolve(returnObj); // Getting 500 error from the below request, inserting dummy data instead of response for now\n      // axios({\n      //   method: 'POST',\n      //   url:\n      //     'https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/pricing/v1.0',\n      //   headers: {\n      //     'content-type': 'application/x-www-form-urlencoded',\n      //     'x-rapidapi-host':\n      //       'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n      //     'x-rapidapi-key': '2f3a0e5559mshf0b9a7a94324ff7p1bf4dajsna06e1715474c'\n      //   },\n      //   data: {\n      //     inboundDate: '2019-12-15',\n      //     cabinClass: 'business',\n      //     children: '0',\n      //     infants: '0',\n      //     country: 'US',\n      //     currency: 'USD',\n      //     locale: 'en-US',\n      //     originPlace: 'EWR-sky',\n      //     destinationPlace: 'HOUA-sky',\n      //     outboundDate: '2019-12-12',\n      //     adults: '1'\n      //   }\n      // })\n      //   .then(response => {\n      //     console.log(response);\n      //   })\n      //   .catch(error => {\n      //     console.log(error);\n      //   });\n    };\n\n    getOriginCityId();\n  });\n};\n\nexport default loadResults;","map":{"version":3,"sources":["/Users/rjshoemaker/Desktop/code/projects/myconcierge/client/src/loadResults.js"],"names":["axios","require","loadResults","items","Promise","resolve","reject","firstName","destCity","originCity","depDate","returnDate","originCityId","destCityId","originCityName","destCityName","getOriginCityId","method","url","headers","params","query","then","response","data","Places","PlaceId","PlaceName","getDestCityId","catch","error","console","log","searchFlights","returnObj"],"mappings":"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","sourcesContent":["const axios = require('axios');\n\nconst loadResults = items => {\n  return new Promise((resolve, reject) => {\n    const { firstName, destCity, originCity, depDate, returnDate } = items;\n\n    let originCityId;\n    let destCityId;\n    let originCityName;\n    let destCityName;\n\n    const getOriginCityId = () => {\n      axios({\n        method: 'GET',\n        url:\n          'https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/UK/GBP/en-GB/',\n        headers: {\n          'content-type': 'application/octet-stream',\n          'x-rapidapi-host':\n            'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n          'x-rapidapi-key': '2f3a0e5559mshf0b9a7a94324ff7p1bf4dajsna06e1715474c'\n        },\n        params: {\n          query: originCity\n        }\n      })\n        .then(response => {\n          originCityId = response.data.Places[0].PlaceId;\n          originCityName = response.data.Places[0].PlaceName;\n          getDestCityId();\n        })\n        .catch(error => {\n          console.log(error);\n          reject(error);\n        });\n    };\n\n    const getDestCityId = () => {\n      axios({\n        method: 'GET',\n        url:\n          'https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/UK/GBP/en-GB/',\n        headers: {\n          'content-type': 'application/octet-stream',\n          'x-rapidapi-host':\n            'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n          'x-rapidapi-key': '2f3a0e5559mshf0b9a7a94324ff7p1bf4dajsna06e1715474c'\n        },\n        params: {\n          query: destCity\n        }\n      })\n        .then(response => {\n          destCityId = response.data.Places[0].PlaceId;\n          destCityName = response.data.Places[0].PlaceName;\n          searchFlights();\n        })\n        .catch(error => {\n          console.log(error);\n          reject(error);\n        });\n    };\n\n    const searchFlights = () => {\n      const returnObj = {\n        firstName,\n        originCityId,\n        originCityName,\n        destCityId,\n        destCityName,\n        depDate,\n        returnDate\n      };\n\n      resolve(returnObj);\n\n      // Getting 500 error from the below request, inserting dummy data instead of response for now\n\n      // axios({\n      //   method: 'POST',\n      //   url:\n      //     'https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/pricing/v1.0',\n      //   headers: {\n      //     'content-type': 'application/x-www-form-urlencoded',\n      //     'x-rapidapi-host':\n      //       'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n      //     'x-rapidapi-key': '2f3a0e5559mshf0b9a7a94324ff7p1bf4dajsna06e1715474c'\n      //   },\n      //   data: {\n      //     inboundDate: '2019-12-15',\n      //     cabinClass: 'business',\n      //     children: '0',\n      //     infants: '0',\n      //     country: 'US',\n      //     currency: 'USD',\n      //     locale: 'en-US',\n      //     originPlace: 'EWR-sky',\n      //     destinationPlace: 'HOUA-sky',\n      //     outboundDate: '2019-12-12',\n      //     adults: '1'\n      //   }\n      // })\n      //   .then(response => {\n      //     console.log(response);\n      //   })\n      //   .catch(error => {\n      //     console.log(error);\n      //   });\n    };\n\n    getOriginCityId();\n  });\n};\n\nexport default loadResults;\n"]},"metadata":{},"sourceType":"module"}