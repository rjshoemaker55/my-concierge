{"ast":null,"code":"import _slicedToArray from \"/Users/rjshoemaker/Desktop/code/projects/myconcierge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rjshoemaker/Desktop/code/projects/myconcierge/client/src/screens/Landing/index.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BrowserHistory } from 'react-router';\nimport { Modal } from 'react-bootstrap';\nimport FormQuestion from '../../components/FormQuestion';\nimport loadResults from '../../loadResults';\nimport './styles.css';\n\nconst Landing = () => {\n  let history = useHistory();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        destCity = _useState4[0],\n        setDestCity = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        originCity = _useState6[0],\n        setOriginCity = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        depDate = _useState8[0],\n        setDepDate = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        returnDate = _useState10[0],\n        setReturnDate = _useState10[1];\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        questionNumber = _useState12[0],\n        setQuestionNumber = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        showModal = _useState14[0],\n        setShowModal = _useState14[1];\n\n  const questionList = [{\n    mainHeader: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"small-sec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"welcome to\"), \" My Concierge.\"),\n    secHeader: \"What's your first name?\",\n    name: 'firstName',\n    value: firstName\n  }, {\n    mainHeader: \"Hello \".concat(firstName, \"!\"),\n    secHeader: \"Where are you headed? (city, country)\",\n    name: 'destCity',\n    value: destCity\n  }, {\n    mainHeader: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Ahh \", destCity, \", \", React.createElement(\"span\", {\n      className: \"small-sec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"great choice!\")),\n    secHeader: \"Where are you leaving from? (city of airport)\",\n    name: 'originCity',\n    value: originCity\n  }, {\n    mainHeader: \"Got it. \".concat(originCity, \" to \").concat(destCity, \".\"),\n    secHeader: \"When are you leaving?\",\n    name: 'depDate',\n    value: depDate\n  }, {\n    mainHeader: 'Last step!',\n    secHeader: \"When will you be returning?\",\n    name: 'returnDate',\n    value: returnDate\n  }];\n  let currentQuestion = questionList[questionNumber];\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'firstName':\n        setFirstName(e.target.value);\n        break;\n\n      case 'destCity':\n        setDestCity(e.target.value);\n        break;\n\n      case 'originCity':\n        setOriginCity(e.target.value);\n        break;\n\n      case 'depDate':\n        setDepDate(e.target.value);\n        break;\n\n      case 'returnDate':\n        setReturnDate(e.target.value);\n        break;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (questionNumber === 4) {\n      return handleFinish();\n    }\n\n    await setQuestionNumber(questionNumber + 1);\n    currentQuestion = questionList[questionNumber];\n  };\n\n  const handleFinish = () => {\n    setShowModal(true);\n    loadResults({\n      firstName,\n      destCity,\n      originCity,\n      depDate,\n      returnDate\n    }).then(res => {\n      console.log(res);\n      history.push('/results');\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"main-div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(FormQuestion, {\n    mainHeader: currentQuestion.mainHeader,\n    secHeader: currentQuestion.secHeader,\n    name: currentQuestion.name,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    value: currentQuestion.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    show: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Please wait while we load your results...\"))));\n};\n\nexport default Landing;","map":{"version":3,"sources":["/Users/rjshoemaker/Desktop/code/projects/myconcierge/client/src/screens/Landing/index.js"],"names":["React","useState","useHistory","BrowserHistory","Modal","FormQuestion","loadResults","Landing","history","firstName","setFirstName","destCity","setDestCity","originCity","setOriginCity","depDate","setDepDate","returnDate","setReturnDate","questionNumber","setQuestionNumber","showModal","setShowModal","questionList","mainHeader","secHeader","name","value","currentQuestion","handleChange","e","target","handleSubmit","preventDefault","handleFinish","then","res","console","log","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BrowserHistory } from 'react-router';\nimport { Modal } from 'react-bootstrap';\n\nimport FormQuestion from '../../components/FormQuestion';\n\nimport loadResults from '../../loadResults';\n\nimport './styles.css';\n\nconst Landing = () => {\n  let history = useHistory();\n  const [firstName, setFirstName] = useState('');\n  const [destCity, setDestCity] = useState('');\n  const [originCity, setOriginCity] = useState('');\n  const [depDate, setDepDate] = useState('');\n  const [returnDate, setReturnDate] = useState('');\n  const [questionNumber, setQuestionNumber] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n\n  const questionList = [\n    {\n      mainHeader: (\n        <span>\n          <span className='small-sec'>welcome to</span> My Concierge.\n        </span>\n      ),\n      secHeader: `What's your first name?`,\n      name: 'firstName',\n      value: firstName\n    },\n    {\n      mainHeader: `Hello ${firstName}!`,\n      secHeader: `Where are you headed? (city, country)`,\n      name: 'destCity',\n      value: destCity\n    },\n    {\n      mainHeader: (\n        <span>\n          Ahh {destCity}, <span className='small-sec'>great choice!</span>\n        </span>\n      ),\n      secHeader: `Where are you leaving from? (city of airport)`,\n      name: 'originCity',\n      value: originCity\n    },\n    {\n      mainHeader: `Got it. ${originCity} to ${destCity}.`,\n      secHeader: `When are you leaving?`,\n      name: 'depDate',\n      value: depDate\n    },\n    {\n      mainHeader: 'Last step!',\n      secHeader: `When will you be returning?`,\n      name: 'returnDate',\n      value: returnDate\n    }\n  ];\n\n  let currentQuestion = questionList[questionNumber];\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'firstName':\n        setFirstName(e.target.value);\n        break;\n      case 'destCity':\n        setDestCity(e.target.value);\n        break;\n      case 'originCity':\n        setOriginCity(e.target.value);\n        break;\n      case 'depDate':\n        setDepDate(e.target.value);\n        break;\n      case 'returnDate':\n        setReturnDate(e.target.value);\n        break;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (questionNumber === 4) {\n      return handleFinish();\n    }\n\n    await setQuestionNumber(questionNumber + 1);\n    currentQuestion = questionList[questionNumber];\n  };\n\n  const handleFinish = () => {\n    setShowModal(true);\n    loadResults({\n      firstName,\n      destCity,\n      originCity,\n      depDate,\n      returnDate\n    }).then(res => {\n      console.log(res);\n      history.push('/results');\n    });\n  };\n\n  return (\n    <div className='main-div'>\n      <FormQuestion\n        mainHeader={currentQuestion.mainHeader}\n        secHeader={currentQuestion.secHeader}\n        name={currentQuestion.name}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n        value={currentQuestion.value}\n      />\n      <Modal show={showModal}>\n        <Modal.Header>\n          <Modal.Title>Please wait while we load your results...</Modal.Title>\n        </Modal.Header>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}